
# Project 2 Report: Advanced Candidate Evaluation System

## Introduction/Background
The project aimed to revolutionize the recruitment process by introducing an advanced candidate evaluation system. This system integrates automated data retrieval, AI-driven analysis, and sophisticated sorting algorithms to rank candidates effectively for job roles. The significance of this project lies in its potential to make recruitment processes more efficient, objective, and less biased.

- **Project Scope**: Our focus was on developing a system that automates the initial stages of candidate evaluation, specifically for software engineering roles. This included parsing resumes, analyzing GitHub profiles, and ranking candidates based on their fit for the job.
- **Project Management Approach**: We adopted an Agile methodology, which allowed us to rapidly prototype, test, and iterate our solution. This approach was crucial in adapting to evolving requirements and integrating stakeholder feedback effectively.






Project 2 focused on enhancing the efficiency and effectiveness of the recruitment process. We developed an advanced candidate evaluation system using a combination of automated data retrieval, AI-driven analysis, and sophisticated sorting algorithms.
The scope of this project encompassed the development of a system that streamlines the candidate selection process, specifically targeting the reduction of manual effort in evaluating resumes and GitHub profiles.
Our approach to project management was agile, with iterative development cycles, regular team meetings, and continuous integration of feedback.
Literature Review (20 Points):

Discuss related work and how your project aligns with or diverges from existing solutions or methodologies.
Software Technologies (20 Points):

Detail the technologies, tools, and frameworks used.
Justify the selection of these technologies.
Project Lifecycle (20 Points):

Describe the stages of your project's development.
Explain the methodologies and processes implemented.
Requirements (30 Points):

Document both Functional and Non-Functional Requirements.
Make sure to mention the 3 MMFs in detail here
Discuss the process of identifying and prioritizing these requirements.
Design (30 Points):

Present architectural and low-level design diagrams.
Explain your design decisions and their impact.
Testing (50 Points):

Elaborate on the Test Strategy, including whitebox and blackbox testing methods.
List various tools used for testing and explain their purpose.
Provide detailed test cases and their outcomes.
Discuss how testing influenced the development process and the final product.
