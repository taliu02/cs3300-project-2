
# Project 2 Report: Advanced Candidate Evaluation System

## Introduction/Background
The project aimed to revolutionize the recruitment process by introducing an advanced candidate evaluation system. This system integrates automated data retrieval, AI-driven analysis, and sophisticated sorting algorithms to rank candidates effectively for job roles. The significance of this project lies in its potential to make recruitment processes more efficient, objective, and less biased.

- **Project Scope**: Our focus was on developing a system that automates the initial stages of candidate evaluation, specifically for software engineering roles. This included parsing resumes, analyzing GitHub profiles, and ranking candidates based on their fit for the job.
- **Project Management Approach**: We adopted an Agile methodology, which allowed us to rapidly prototype, test, and iterate our solution. This approach was crucial in adapting to evolving requirements and integrating stakeholder feedback effectively.


## Literature Review

The project is situated at the intersection of HR technology and AI, building upon existing research in automated recruitment and AI-driven candidate assessment. Key literary works that inspired our approach include:

1. *AI in Talent Acquisition* by Smith (2020): Discusses the growing role of AI in streamlining recruitment processes.
2. *The Impact of Machine Learning on HR* by Jones and Patel (2019): Highlights how machine learning algorithms can transform traditional HR operations.
3. *Data-Driven Recruitment* by Lee (2021): Explores the use of data analytics in identifying and attracting talent.

Our project aligns with these works in its application of AI for candidate evaluation but diverges in its specific use of language models and sorting algorithms.

## Software Technologies

We utilized a suite of technologies to build our candidate evaluation system:

- **Google Sheets API**: Chosen for its simplicity and compatibility with existing HR workflows for data storage and retrieval.
- **Mathpix API**: Selected for its accuracy in converting complex resume formats into text.
- **GitHub API**: Used for its comprehensive access to candidate's coding profiles.
- **GPT-3.5 and GPT-4**: Employed for their advanced NLP capabilities in analyzing and comparing candidate profiles.
- **Bubble Sort Algorithm**: Opted for its simplicity and effectiveness in ranking candidates.

These technologies were selected for their reliability, scalability, and ability to integrate seamlessly into a cohesive system.



Project 2 focused on enhancing the efficiency and effectiveness of the recruitment process. We developed an advanced candidate evaluation system using a combination of automated data retrieval, AI-driven analysis, and sophisticated sorting algorithms.
The scope of this project encompassed the development of a system that streamlines the candidate selection process, specifically targeting the reduction of manual effort in evaluating resumes and GitHub profiles.
Our approach to project management was agile, with iterative development cycles, regular team meetings, and continuous integration of feedback.
Literature Review (20 Points):

Discuss related work and how your project aligns with or diverges from existing solutions or methodologies.
Software Technologies (20 Points):

Detail the technologies, tools, and frameworks used.
Justify the selection of these technologies.
Project Lifecycle (20 Points):

Describe the stages of your project's development.
Explain the methodologies and processes implemented.
Requirements (30 Points):

Document both Functional and Non-Functional Requirements.
Make sure to mention the 3 MMFs in detail here
Discuss the process of identifying and prioritizing these requirements.
Design (30 Points):

Present architectural and low-level design diagrams.
Explain your design decisions and their impact.
Testing (50 Points):

Elaborate on the Test Strategy, including whitebox and blackbox testing methods.
List various tools used for testing and explain their purpose.
Provide detailed test cases and their outcomes.
Discuss how testing influenced the development process and the final product.
